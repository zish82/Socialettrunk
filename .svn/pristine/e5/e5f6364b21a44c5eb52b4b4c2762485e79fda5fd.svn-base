using System;
using System.Dynamic;
using System.Threading.Tasks;
using ClientLibrary.Authentication;
using ClientLibrary.Credentials;
using ClientLibrary.SocialMedia.Twitter;
using Facebook;

namespace ClientLibrary.SocialMedia.Facebook
{
    public class Facebook : IAmSocialNetworkAndICanAuthenticate
    {
        private OpenAuthenticationResult authenticate;

        public Facebook(IOpenAuthenticate facebookOAuth)
        {
            OpenAuthenticate = facebookOAuth;
            AuthenticatedCredentials = new FacebookCredentials();
        }

        public async Task<PostingResult> Post(string post)
        {
            try
            {
                var client = new FacebookClient(AuthenticatedCredentials.GetCredential().Item2);
                dynamic parameters = new ExpandoObject();
                parameters.message = post;
                dynamic result = await client.PostTaskAsync("me/feed", parameters);
                var lastMessageId = result.id;
                return new PostingResult{Description = "Successful", Status = PostingStatus.Success};
            }
            catch (Exception e)
            {
                return new PostingResult { Description = e.Message, Status = PostingStatus.Error };
            }
        }

        public IOpenAuthenticate OpenAuthenticate { get; set; }
        public IStoreCredentials AuthenticatedCredentials { get; set; }
        public bool IsAuthenticated { get { return AuthenticatedCredentials.GetCredential() != null; } }

        public async void Authenticate()
        {
            if(IsAuthenticated)
                authenticate = await OpenAuthenticate.Authenticate();
        }
    }
}